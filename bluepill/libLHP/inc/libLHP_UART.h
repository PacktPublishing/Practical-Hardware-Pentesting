#ifndef __LIB_LHP_UART_H
#define __LIB_LHP_UART_H
#include <libopencm3/stm32/usart.h>
char *get_receive_buff();
void receive_buff_processed();
uint8_t UART1_received_cmd();
void setup_UART1();
void printstr(uint32_t usart,char * str_p);
void printstr_blocking(uint32_t usart,char * str_p);
void printstr_rn(uint32_t usart);
void clrscreen_uart(uint32_t uart);
void print_hex_prefix(uint32_t usart);
void print_hex_8_noprefix(uint32_t usart,uint8_t c);
void print_hex_8(uint32_t usart,uint8_t c);
void print_hex_16_noprefix(uint32_t usart,uint16_t c);
void print_hex_16(uint32_t usart,uint16_t c);
void print_hex_32_noprefix(uint32_t usart,uint32_t c);
void print_hex_32(uint32_t usart,uint32_t c);
void print_hex_64_noprefix(uint32_t usart,uint64_t c);
void print_hex_64(uint32_t usart,uint64_t c);
void print_hexdump_str(uint32_t usart,char *str, uint16_t sz );
void print_uint(uint32_t usart,uint64_t inuint);

	

#endif
